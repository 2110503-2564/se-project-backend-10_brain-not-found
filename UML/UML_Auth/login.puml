@startuml Manage Authentication (POST)

footer Page %page% of %lastpage%
title "User Login (POST)"

participant "Client" as client
participant "<<JavaScript>>\n:server" as server
participant "<<router>>\n:auth" as routerAuth
participant "<<controllers>>\n:auth" as controllersAuth
participant "<<models>>\n:User" as modelUser
database "<<MongoDB>>\n:users" as UsersDatabase

client -> server ++ : req.post('/api/v1/auth/login')
server -> routerAuth ++ : app.use('/api/v1/auth', auth)
routerAuth -> controllersAuth ++ : login
controllersAuth -> modelUser ++ : findOne({ email }).select('+password')
modelUser -> UsersDatabase ++ : query(UserSchema)
UsersDatabase -->> modelUser : user data / null
modelUser -->> controllersAuth : user data / error

alt User Not Found
    controllersAuth --> client -- : 400 Bad Request (Invalid credentials)
else User Found
    controllersAuth -> modelUser ++ : matchPassword(password)
    modelUser -->> controllersAuth : true / false
    
    alt Password Incorrect
        controllersAuth --> client -- : 401 Unauthorized (Invalid credentials)
    else Password Correct
        controllersAuth -> controllersAuth : generate JWT token (sendTokenResponse)
        controllersAuth --> client -- : response (JWT token)
    end
end

@enduml
