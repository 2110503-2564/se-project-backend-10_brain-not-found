{
	"info": {
		"_postman_id": "73f35468-00a0-480f-bbab-ba385a32af26",
		"name": "Massage Shop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29496459"
	},
	"item": [
		{
			"name": "Shop",
			"item": [
				{
					"name": "Get all shops",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									"\r",
									"pm.test(\"There are some shops!!\" , () => {\r",
									"    pm.expect(response.count).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Create new shop\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Update single shop\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/shops/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_shop_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const reponse = pm.response.json();\r",
									"const new_shop_id = reponse.data.id;\r",
									"\r",
									"// console.log(new_hospital);\r",
									"pm.globals.set(\"global_shop_ID\",new_shop_id);\r",
									"\r",
									"pm.execution.setNextRequest(\"Get single shop\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{$randomFullName}} Massage\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"district\": \"{{$randomCity}}\",\r\n  \"province\": \"{{$randomState}}\",\r\n  \"postalcode\": \"{{$randomInt(10000, 99999)}}\",\r\n  \"tel\": \"{{$randomPhoneNumber}}\",\r\n  \"region\": \"{{$randomArrayElement(['Central', 'North', 'Northeast', 'South'])}}\",\r\n  \"openTime\": \"{{$randomTime('HH:mm')}}\",\r\n  \"closeTime\": \"{{$randomTime('HH:mm')}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update single shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(\"Delete single shop\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"openTime\": \"{{$randomTime('HH:mm')}}\",\r\n    \"closeTime\": \"{{$randomTime('HH:mm')}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_shop_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete single shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.execution.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/shops/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_shop_ID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservation",
			"item": [
				{
					"name": "Update reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"shop\": \"67c2d739e184fad462e3395b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "67c2d7a30aa614c5ffa76f62"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all reservations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "67c2d305b50056a6efe5b934"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "67c3f474281d1017983dff99"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservationDate\": \"2099-10-02T17:00:00.000+00:00\",\r\n  \"user\": \"67c43ee8e7d8e4cf259c75aa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/:shopId/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":shopId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "shopId",
									"value": "67c44300099d8d3ee5b5d8b8"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authantication",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"12345678\",\r\n    \"tel\": \"{{$randomPhoneNumber}}\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Logan.Will49@yahoo.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Logged In User with Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",null)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Automation Testing",
			"item": [
				{
					"name": "login adminTee for setup database",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"\r",
									"// ดึง TOKEN จาก Environment Variable\r",
									"let token = pm.environment.get(\"TOKEN\");\r",
									"\r",
									"// แยกข้อมูลจาก JWT Token\r",
									"let base64Url = token.split('.')[1]; // Payload part ของ JWT\r",
									"let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/'); // เปลี่ยน Base64URL เป็น Base64\r",
									"let decodedData = JSON.parse(atob(base64)); // แปลงจาก Base64 เป็น JSON\r",
									"\r",
									"// ดึงค่า id ออกจาก decoded payload และเก็บใน global variable\r",
									"pm.globals.set(\"global_adminTee_ID\", decodedData.id);\r",
									"\r",
									"console.log(\"User ID:\", decodedData.id); // ตรวจสอบใน Console\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"adminTee@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "create the reservation for setup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const new_reservation_id = response.data._id;\r",
									"\r",
									"pm.globals.set(\"global_reservation_for_adminTee_ID\",new_reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservationDate\": \"2025-03-03T09:30:00.000Z\",\r\n  \"user\": \"{{global_adminTee_ID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/:shopId/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":shopId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "shopId",
									"value": "67c442eb099d8d3ee5b5d8b5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "register as User ใส่ข้อมูลการลงทะเบียนไม่ครบ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"12345678\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register as User ใส่ email ที่มีอยู่แล้ว",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"adminTee@gmail.com\",\r\n    \"password\": \"12345678\",\r\n    \"tel\": \"{{$randomPhoneNumber}}\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register as User ใส่ข้อมูลการลงทะเบียนครบ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let requestBody = pm.request.body.toJSON(); // ดึงข้อมูลจาก body ของ request\r",
									"let email = requestBody.email;\r",
									"\r",
									"if (email) {\r",
									"    pm.globals.set(\"global_email_ID\", email);\r",
									"    console.log(\"ตั้งค่า global_email_ID เป็น: \" + email);\r",
									"} else {\r",
									"    console.error(\"ไม่พบฟิลด์อีเมลใน body ของคำขอ\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"USER@gmail.com\",\r\n    \"password\": \"12345678\",\r\n    \"tel\": \"{{$randomPhoneNumber}}\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login as user ที่ไม่มีอยู่จริง",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"hacker@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login as user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"\r",
									"// ดึง TOKEN จาก Environment Variable\r",
									"let token = pm.environment.get(\"TOKEN\");\r",
									"\r",
									"// แยกข้อมูลจาก JWT Token\r",
									"let base64Url = token.split('.')[1]; // Payload part ของ JWT\r",
									"let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/'); // เปลี่ยน Base64URL เป็น Base64\r",
									"let decodedData = JSON.parse(atob(base64)); // แปลงจาก Base64 เป็น JSON\r",
									"\r",
									"// ดึงค่า id ออกจาก decoded payload และเก็บใน global variable\r",
									"pm.globals.set(\"global_user_ID\", decodedData.id);\r",
									"\r",
									"console.log(\"User ID:\", decodedData.id); // ตรวจสอบใน Console\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{global_email_ID}}\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "view all shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/shops",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops"
							]
						}
					},
					"response": []
				},
				{
					"name": "view single shop ที่มีอยู่จริง",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/shops/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "67c442eb099d8d3ee5b5d8b5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "view single shop ที่ไม่มีอยู่จริง",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/shops/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "9999999999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create his/her reservation ใส่แบบผิด format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed syntax \r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservationDate\": \"2025-03-05T18:30:00.000Z\", \r\n  \"user\": \"{{global_user_ID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/:shopId/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":shopId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "shopId",
									"value": "67c442eb099d8d3ee5b5d8b5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create his/her reservation ใส่แบบไม่ตรงกับเวลาเปิดของร้านค้า",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed syntax \r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservationDate\": \"2025-03-05T18:30:00.000Z\", \r\n  \"user\": \"{{global_user_ID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/:shopId/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":shopId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "shopId",
									"value": "67c442eb099d8d3ee5b5d8b5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create his/her reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response);\r",
									"const new_reservation_id = response.data._id;\r",
									"\r",
									"\r",
									"pm.globals.set(\"global_reservation_ID\",new_reservation_id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservationDate\": \"2025-03-03T09:30:00.000Z\",\r\n  \"user\": \"{{global_user_ID}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/shops/:shopId/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"shops",
								":shopId",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "shopId",
									"value": "67c442eb099d8d3ee5b5d8b5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get his/her single reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get his/her all reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get other single reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_for_adminTee_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update his/her reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"2024-03-03T10:30:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update his/her reservation with wrong time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"2024-03-03T06:45:00.000Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update his/her reservation with wrong format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"03-03-2024 06:45:00\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update other reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservationDate\": \"2024-03-03T06:45:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_for_adminTee_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete his/her reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete other reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "67c57a535f5f8d06c6da6daf"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "logout as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\",null)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"TOKEN\",pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"adminTee@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "get single reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_for_adminTee_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get all reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update single reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"shop\": \"67c442eb099d8d3ee5b5d8b5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_for_adminTee_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete single reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/:id",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{global_reservation_for_adminTee_ID}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}